CREATE DATABASE brp;
USE brp;
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    role ENUM('admin', 'user', 'whitelisted', 'p_department', 'e_department') NOT NULL
);


CREATE TABLE applications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name_irl VARCHAR(255) NOT NULL,
    age_irl INT NOT NULL,
    discord_id VARCHAR(255) NOT NULL,
    character_name VARCHAR(255) NOT NULL,
    character_age INT NOT NULL,
    backstory TEXT NOT NULL,
    explain_metagaming TEXT NOT NULL,
    explain_nlrp TEXT NOT NULL,
    explain_powergaming TEXT NOT NULL,
    situation_robbery TEXT NOT NULL,
    situation_admin TEXT NOT NULL,
    extra_info TEXT NOT NULL
);
ALTER TABLE users Drop COLUMN is_online BOOLEAN DEFAULT FALSE;
ALTER TABLE users Drop COLUMN is_whitelisted BOOLEAN DEFAULT FALSE;

CREATE TABLE IF NOT EXISTS pd_apply (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name_irl VARCHAR(255) NOT NULL,
    age_irl INT NOT NULL,
    discord_id VARCHAR(255) NOT NULL,
    character_name VARCHAR(255) NOT NULL,
    character_age INT NOT NULL,
    backstory TEXT NOT NULL,
    escalation TEXT NOT NULL,  -- Column for escalation details
);

CREATE TABLE IF NOT EXISTS ems_apply (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name_irl VARCHAR(255) NOT NULL,
    age_irl INT NOT NULL,
    discord_id VARCHAR(255) NOT NULL,
    character_name VARCHAR(255) NOT NULL,
    character_age INT NOT NULL,
    backstory TEXT NOT NULL,
    reason to join TEXT NOT NULL,  -- Column for escalation details
);

-- Table for storing products
CREATE TABLE products (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255),
    description TEXT,
    price DECIMAL(10, 2),
    image VARCHAR(255),
    stock INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE products
ADD COLUMN category ENUM('Memberships', 'Priorities') NOT NULL;


-- Table for storing orders
CREATE TABLE orders (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT, -- Reference to users table
    total DECIMAL(10, 2),
    status VARCHAR(50) DEFAULT 'Pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Table for storing order items (relationship between products and orders)
CREATE TABLE order_items (
    id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT,
    product_id INT,
    quantity INT,
    price DECIMAL(10, 2),
    FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);
